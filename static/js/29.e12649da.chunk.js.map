{"version":3,"file":"static/js/29.e12649da.chunk.js","mappings":"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","sources":["components/Content/styled.js","components/Content/index.js","components/Header/styled.js","components/Header/index.js","components/Section/styled.js","components/Section/index.js","features/themeToggle/styled.js","features/themeToggle/ThemeToggle.js","features/tasks/Form/styled.js","features/tasks/styled.js","features/tasks/Form/index.js","hooks/useFocusElement.js","features/tasks/queryParameters.js","features/tasks/Search/styled.js","features/tasks/Search/index.js","features/tasks/hooks/useEmptySearchParams.js","features/tasks/Buttons/index.js","features/tasks/TasksList/styled.js","features/tasks/TasksList/index.js","hooks/useTasks.js","features/tasks/Tasks.js","pages/Tasks.js"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nexport const Block = styled.div`\r\n    background: ${({ theme }) => theme.contentBlock.background};\r\n    margin-bottom: 10px;\r\n    border: 2px solid ${({ theme }) => theme.contentBlock.border};\r\n    border-radius: ${({ theme }) => theme.borderRadius};\r\n    transition: all ${({ theme }) => theme.transitionDuration} linear;\r\n`;\r\n\r\nexport const TopBox = styled.div`\r\n    padding: 25px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    row-gap: 20px;\r\n    border-bottom: 2px solid ${({ theme }) => theme.contentBlock.border};\r\n    transition: all ${({ theme }) => theme.transitionDuration} linear;\r\n\r\n    ${({ vertical }) => vertical && css`\r\n        @media (max-width: 768px) {\r\n            flex-direction: column;\r\n        }\r\n    `}\r\n`;\r\n\r\nexport const HeaderTwo = styled.h2`\r\n    color: ${({ theme }) => theme.h2.color};\r\n    margin: 0;\r\n    font-size: 25px;\r\n    transition: all ${({ theme }) => theme.transitionDuration} linear;\r\n\r\n    @media (max-width: 576px) {\r\n        font-size: 20px;\r\n        word-break: break-word;\r\n    }\r\n`;\r\n\r\nexport const BottomBox = styled.div`\r\n    padding: 25px;\r\n`;\r\n","import {\r\n    Block,\r\n    TopBox,\r\n    HeaderTwo,\r\n    BottomBox\r\n} from \"./styled\";\r\n\r\nconst Content = ({\r\n    isLayout,\r\n    isVertical,\r\n    title,\r\n    extraContentTop,\r\n    extraContentBottom\r\n}) => (\r\n    <Block>\r\n        <TopBox layout={isLayout} vertical={isVertical}>\r\n            <HeaderTwo>\r\n                {title}\r\n            </HeaderTwo>\r\n            {extraContentTop}\r\n        </TopBox>\r\n        <BottomBox>\r\n            {extraContentBottom}\r\n        </BottomBox>\r\n    </Block>\r\n);\r\n\r\nexport default Content;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    margin-top: 40px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap-reverse;\r\n    gap: 20px 15px;\r\n`;\r\n\r\nexport const HeaderOne = styled.h1`\r\n    color: ${({ theme }) => theme.h1.color};\r\n    margin: 0;\r\n    font-size: 40px;\r\n    line-height: 1;\r\n    transition: all ${({ theme }) => theme.transitionDuration} linear;\r\n\r\n    @media (max-width: 576px) {\r\n        font-size: 28px;\r\n    }\r\n`;\r\n","import { StyledHeader, HeaderOne } from \"./styled\";\r\n\r\nconst Header = ({ title, extraElement }) => (\r\n    <StyledHeader>\r\n        <HeaderOne>\r\n            {title}\r\n        </HeaderOne>\r\n        {extraElement}\r\n    </StyledHeader>\r\n);\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    margin-top: 20px;\r\n`;\r\n","import { StyledSection } from \"./styled\";\r\n\r\nconst Section = ({ children }) => (\r\n    <StyledSection>\r\n        {children}\r\n    </StyledSection>\r\n);\r\n\r\nexport default Section;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledThemeToggle = styled.button`\r\n    width: 60px;\r\n    height: 30px;\r\n    background: ${({ theme }) => theme.themeToggle.background1};\r\n    display: block;\r\n    border: 2px solid ${({ theme }) => theme.themeToggle.border};\r\n    border-radius: 50px;\r\n    flex-shrink: 0;\r\n    position: relative;\r\n    transition: all ${({ theme }) => theme.transitionDuration} linear;\r\n    z-index: 1;\r\n    cursor: pointer;\r\n\r\n    &::before {\r\n        content: \"\";\r\n        width: 20px;\r\n        height: 20px;\r\n        background: ${({ theme }) => theme.themeToggle.background2};\r\n        margin: auto 0;\r\n        border-radius: 50%;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 5px;\r\n        bottom: 0;\r\n        transition: all 0.3s linear;\r\n    }\r\n\r\n    &::after {\r\n        content: \"\\\\e804\";\r\n        width: 50%;\r\n        height: 100%;\r\n        color: ${({ theme }) => theme.themeToggle.color};\r\n        border-radius: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-family: fontello;\r\n        font-size: 20px;\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        transition: all 0.3s linear;\r\n    }\r\n\r\n    ${({ currentTheme }) => currentTheme === \"dark\" && css`\r\n        &::before {\r\n            left: calc(100% - 5px);\r\n            transform: translateX(-100%);\r\n        }\r\n\r\n        &::after {\r\n            content: \"\\\\e805\";\r\n            right: 50%;\r\n        }\r\n    `}\r\n\r\n    @media (max-width: 320px) {\r\n        margin-left: auto;\r\n    }\r\n`;\r\n","import { useTheme } from \"../../ThemeContext\";\nimport { StyledThemeToggle } from \"./styled\";\n\nconst ThemeToggle = () => {\n    const { theme, toggleTheme } = useTheme();\n\n    return (\n        <StyledThemeToggle\n            currentTheme={theme}\n            type=\"button\"\n            aria-label={`Przełącz motyw na ${theme === \"light\" ? \"ciemny\" : \"jasny\"}`}\n            onClick={() => toggleTheme()}\n        />\n    )\n};\n\nexport default ThemeToggle;\n","import styled from \"styled-components\";\r\n\r\nexport const FormArea = styled.form`\r\n    display: flex;\r\n\r\n    @media (max-width: 576px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n    margin-right: 25px;\r\n    padding: 10px;\r\n    color: ${({ theme }) => theme.formInput.color};\r\n    background: ${({ theme }) => theme.formInput.background};\r\n    border: 2px solid ${({ theme }) => theme.formInput.border};\r\n    flex: 1;\r\n    transition: all ${({ theme }) => theme.transitionDuration} linear;\r\n\r\n    @media (max-width: 576px) {\r\n        margin: 0 0 15px;\r\n    }\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n    padding: 10px;\r\n    color: ${({ theme }) => theme.filledButton.color};\r\n    background: ${({ theme }) => theme.filledButton.background};\r\n    border: 3px solid ${({ theme }) => theme.filledButton.border};\r\n    transition: all ${({ theme }) => theme.transitionDuration} linear;\r\n    cursor: pointer;\r\n\r\n    &:hover,\r\n    &:focus {\r\n        background: ${({ theme }) => theme.filledButton.hoverBackground};\r\n        border-color: ${({ theme }) => theme.filledButton.hoverBorder};\r\n        transform: scale(1.1);\r\n    }\r\n\r\n    &:active {\r\n        background: ${({ theme }) => theme.filledButton.activeBackground};\r\n    }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const Box = styled.div`\r\n    display: flex;\r\n    gap: 20px;\r\n\r\n    @media (max-width: 768px) {\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    color: ${({ theme }) => theme.unfilledButton.color};\r\n    background: none;\r\n    padding: 0;\r\n    border: 0;\r\n    font-size: 18px;\r\n    transition: color ${({ theme }) => theme.transitionDuration} linear;\r\n    cursor: pointer;\r\n\r\n    ${({ cursorDefault }) => cursorDefault && css`\r\n        cursor: default;\r\n    `}\r\n\r\n    &:hover,\r\n    &:focus {\r\n        color: ${({ theme }) => theme.unfilledButton.hoverColor};\r\n    }\r\n\r\n    &:disabled {\r\n        color: ${({ theme }) => theme.unfilledButton.disabledColor};\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport const HiddenFormLabel = styled.label`\r\n    width: 1px;\r\n    height: 1px;\r\n    margin: -1px;\r\n    padding: 0;\r\n    border: 0;\r\n    position: absolute;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n`;\r\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { useFocusElement } from \"../../../hooks/useFocusElement\";\r\nimport { selectTasks, addTask } from \"../tasksSlice\";\r\nimport { FormArea, FormInput, FormButton } from \"./styled\";\r\nimport { HiddenFormLabel } from \"../styled\";\r\n\r\nconst Form = () => {\r\n    const [taskContent, setTaskContent] = useState(\"\");\r\n\r\n    const [inputFocus, inputFocusEvent] = useFocusElement();\r\n\r\n    const tasks = useSelector(selectTasks);\r\n    const dispatch = useDispatch();\r\n\r\n    const isTaskEmpty = (taskContent) => taskContent.length === 0;\r\n\r\n    const existsTask = (taskContent) => {\r\n        if (tasks.some(({ content }) => content === taskContent)) {\r\n            alert(\"Podane zadanie jest już na liście.\");\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const trimedTaskContent = taskContent.trim();\r\n        if (!isTaskEmpty(trimedTaskContent) && !existsTask(trimedTaskContent)) {\r\n            dispatch(addTask({\r\n                id: nanoid(),\r\n                content: trimedTaskContent,\r\n                done: false\r\n            }));\r\n            setTaskContent(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormArea onSubmit={onFormSubmit}>\r\n            <HiddenFormLabel htmlFor=\"tasks\">Dodaj nowe zadanie</HiddenFormLabel>\r\n            <FormInput\r\n                id=\"tasks\"\r\n                type=\"text\"\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                autoFocus\r\n                value={taskContent}\r\n                onChange={({ target }) => setTaskContent(target.value)}\r\n                ref={inputFocus}\r\n            />\r\n            <FormButton onClick={inputFocusEvent}>\r\n                Dodaj zadanie\r\n            </FormButton>\r\n        </FormArea>\r\n    )\r\n};\r\n\r\nexport default Form;\r\n","import { useRef } from \"react\";\r\n\r\nexport const useFocusElement = () => {\r\n    const focusElement = useRef();\r\n    const focus = () => {\r\n        focusElement.current.focus();\r\n    };\r\n\r\n    return [focusElement, focus];\r\n};\r\n","import { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nexport const useQueryParameter = (key) => {\r\n    const location = useLocation();\r\n    const query = new URLSearchParams(location.search).get(key);\r\n    return query;\r\n};\r\n\r\nexport const useReplaceQueryParameter = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    return ({ key, inputValue }) => {\r\n        const searchParams = new URLSearchParams(location.search);\r\n\r\n        if (inputValue === \"\") {\r\n            searchParams.delete(key);\r\n        } else {\r\n            searchParams.set(key, inputValue);\r\n        }\r\n\r\n        navigate(`${location.pathname}?${searchParams.toString()}`);\r\n    };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchEngine = styled.input`\r\n    width: 100%;\r\n    padding: 10px;\r\n    color: ${({ theme }) => theme.formInput.color};\r\n    background: ${({ theme }) => theme.formInput.background};\r\n    border: 2px solid ${({ theme }) => theme.formInput.border};\r\n    transition: all ${({ theme }) => theme.transitionDuration} linear;\r\n`;\r\n","import { useQueryParameter, useReplaceQueryParameter } from \"../queryParameters\";\r\nimport { useEmptySearchParams } from \"../hooks/useEmptySearchParams\";\r\nimport { SearchEngine } from \"./styled\";\r\nimport { HiddenFormLabel } from \"../styled\";\r\n\r\nconst Search = () => {\r\n    const query = useQueryParameter(\"szukaj\");\r\n    const replaceQueryParameter = useReplaceQueryParameter();\r\n    useEmptySearchParams();\r\n\r\n    const onInputChange = ({ target }) => {\r\n        replaceQueryParameter({\r\n            key: \"szukaj\",\r\n            inputValue: target.value.trim() ? target.value : \"\"\r\n        });\r\n    };\r\n\r\n    return (\r\n        <form>\r\n            <HiddenFormLabel htmlFor=\"search\">Wyszukaj zadanie</HiddenFormLabel>\r\n            <SearchEngine\r\n                id=\"search\"\r\n                type=\"text\"\r\n                placeholder=\"Filtruj zadania\"\r\n                value={query || \"\"}\r\n                onChange={onInputChange}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Search;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nexport const useEmptySearchParams = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const searchParams = new URLSearchParams(location.search);\r\n\r\n        if (searchParams.get(\"szukaj\") === \"\") {\r\n            searchParams.delete(\"szukaj\");\r\n            navigate(`?${searchParams.toString()}`);\r\n        }\r\n    }, [location, navigate]);\r\n};\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectTasksState, toggleHideDone, completeAllTasks } from \"../tasksSlice\";\r\nimport { Box, Button } from \"../styled\";\r\n\r\nconst Buttons = () => {\r\n    const { tasks, hideDone } = useSelector(selectTasksState);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        tasks.length > 0 && (\r\n            <Box>\r\n                <Button onClick={() => dispatch(toggleHideDone())}>\r\n                    {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n                </Button>\r\n                <Button\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                    onClick={() => dispatch(completeAllTasks())}\r\n                    cursorDefault={tasks.every(({ done }) => done)}\r\n                >\r\n                    Ukończ wszystkie\r\n                </Button>\r\n            </Box>\r\n        )\r\n    )\r\n};\r\n\r\nexport default Buttons;\r\n","import { Link } from \"react-router-dom\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nexport const TasksArea = styled.ul`\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n`;\r\n\r\nexport const TasksItem = styled.li`\r\n    padding: 10px 15px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n    border-bottom: 2px solid ${({ theme }) => theme.tasks.border};\r\n    transition: all ${({ theme }) => theme.transitionDuration} linear;\r\n\r\n    &:hover,\r\n    &:focus-within {\r\n        background: ${({ theme }) => theme.tasks.background1};\r\n    }\r\n\r\n    &:last-child {\r\n        border: 0;\r\n    }\r\n\r\n    ${({ done }) => done && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const ButtonIcon = styled.i`\r\n    color: ${({ theme }) => theme.actionButtonIcon.color};\r\n    font-size: 20px;\r\n    transition: all ${({ theme }) => theme.transitionDuration} linear;\r\n`;\r\n\r\nexport const ActionButton = styled.button`\r\n    width: 40px;\r\n    height: 40px;\r\n    border: 0;\r\n    flex-shrink: 0;\r\n    transition: background ${({ theme }) => theme.transitionDuration} linear;\r\n    cursor: pointer;\r\n\r\n    ${({ done }) => done && css`\r\n        background: ${({ theme }) => theme.actionButton1.background};\r\n\r\n        &:hover,\r\n        &:focus {\r\n            background: ${({ theme }) => theme.actionButton1.hoverBackground};\r\n        }\r\n\r\n        &:active {\r\n            background: ${({ theme }) => theme.actionButton1.activeBackground};\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background: ${({ theme }) => theme.actionButton2.background};\r\n\r\n        &:hover,\r\n        &:focus {\r\n            background: ${({ theme }) => theme.actionButton2.hoverBackground};\r\n        }\r\n\r\n        &:active {\r\n            background: ${({ theme }) => theme.actionButton2.activeBackground};\r\n        }\r\n    `}\r\n`;\r\n\r\nexport const TasksParagraph = styled.p`\r\n    margin: 0 0 15px;\r\n    flex-grow: 1;\r\n    flex-shrink: 0;\r\n    flex-basis: 100%;\r\n    order: -1;\r\n\r\n    @media (min-width: 320px) {\r\n        margin: 0 15px;\r\n        flex-basis: 100px;\r\n        order: 0;\r\n    }\r\n`;\r\n\r\nexport const TasksContent = styled.span`\r\n    background: linear-gradient(\r\n        to right, \r\n        ${({ theme }) => theme.tasks.background2}, \r\n        ${({ theme }) => theme.tasks.background2}\r\n    );\r\n    background-size: 0% 1px;\r\n    background-position: left center;\r\n    background-repeat: no-repeat;\r\n    transition-property: background-size;\r\n    transition-duration: ${({ transitionTime }) => transitionTime >= \"0.1\" ? transitionTime : \"0.1s\"};\r\n    transition-timing-function: linear;\r\n    word-break: break-word;\r\n\r\n    ${({ done }) => done && css`\r\n        background-size: 100% 1px;\r\n    `}\r\n`;\r\n\r\nexport const TasksLink = styled(Link)`\r\n    color: ${({ theme }) => theme.tasks.color};\r\n    text-decoration: none;\r\n    transition: color ${({ theme }) => theme.transitionDuration} linear;\r\n\r\n    &:hover {\r\n        color: ${({ theme }) => theme.tasks.hoverColor};\r\n        text-decoration: underline;\r\n    }\r\n`;\r\n\r\nexport const ReactTooltipStyled = styled(ReactTooltip)`\r\n    margin-top: -15px !important;\r\n    padding: 10px 20px !important;\r\n`;\r\n\r\nexport const TasksInfo = styled.p`\r\n    margin: 0;\r\n    color: ${({ theme }) => theme.body.color};\r\n    transition: all ${({ theme }) => theme.transitionDuration} linear;\r\n`;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useTheme } from \"styled-components\";\r\nimport { useQueryParameter } from \"../queryParameters\";\r\nimport { useTasks } from \"../../../hooks/useTasks\";\r\nimport {\r\n    selectTasksByQuery,\r\n    selectHideDone,\r\n    toggleDoneTask,\r\n    removeTask\r\n} from \"../tasksSlice\";\r\nimport {\r\n    TasksArea,\r\n    TasksItem,\r\n    ButtonIcon,\r\n    ActionButton,\r\n    TasksParagraph,\r\n    TasksContent,\r\n    TasksLink,\r\n    ReactTooltipStyled,\r\n    TasksInfo\r\n} from \"./styled\";\r\n\r\nconst TasksList = () => {\r\n    const query = useQueryParameter(\"szukaj\");\r\n    const { smoothCrossOutTask } = useTasks();\r\n    const theme = useTheme();\r\n\r\n    const tasks = useSelector(state => selectTasksByQuery(state, query));\r\n    const hideDone = useSelector(selectHideDone);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        tasks.length > 0 ? (\r\n            <TasksArea>\r\n                {tasks.map(task => (\r\n                    <TasksItem\r\n                        done={task.done && hideDone}\r\n                        key={task.id}\r\n                    >\r\n                        <ActionButton\r\n                            done\r\n                            type=\"button\"\r\n                            aria-label=\"Ukończ lub wznów zadanie\"\r\n                            data-for=\"toggleTaskDoneTooltip\"\r\n                            data-tip={`${task.done ? \"Wznów\" : \"Ukończ\"} zadanie`}\r\n                            onClick={() => dispatch(toggleDoneTask(task.id))}\r\n                        >\r\n                            {task.done && <ButtonIcon className=\"icon-check\" />}\r\n                        </ActionButton>\r\n                        <ReactTooltipStyled\r\n                            id=\"toggleTaskDoneTooltip\"\r\n                            textColor={theme.tooltip.color}\r\n                            backgroundColor={theme.tooltip.background}\r\n                            arrowColor={theme.tooltip.background}\r\n                            place=\"top\"\r\n                            effect=\"solid\"\r\n                            delayShow={200}\r\n                            delayHide={200}\r\n                        />\r\n                        <TasksParagraph>\r\n                            <TasksContent\r\n                                done={task.done}\r\n                                transitionTime={smoothCrossOutTask(task)}\r\n                            >\r\n                                <TasksLink to={`/zadania/${task.id}`} title=\"Przejdź do szczegółów zadania\">\r\n                                    {task.content}\r\n                                </TasksLink>\r\n                            </TasksContent>\r\n                        </TasksParagraph>\r\n                        <ActionButton\r\n                            remove\r\n                            type=\"button\"\r\n                            aria-label=\"Usuń zadanie\"\r\n                            data-for=\"removeTaskTooltip\"\r\n                            data-tip=\"Usuń zadanie\"\r\n                            onClick={() => dispatch(removeTask(task.id))}\r\n                        >\r\n                            <ButtonIcon className=\"icon-trash-empty\" />\r\n                        </ActionButton>\r\n                        <ReactTooltipStyled\r\n                            id=\"removeTaskTooltip\"\r\n                            textColor={theme.tooltip.color}\r\n                            backgroundColor={theme.tooltip.background}\r\n                            arrowColor={theme.tooltip.background}\r\n                            place=\"top\"\r\n                            effect=\"solid\"\r\n                            delayShow={200}\r\n                            delayHide={200}\r\n                        />\r\n                    </TasksItem>\r\n                ))}\r\n            </TasksArea>\r\n        ) : (\r\n            <TasksInfo>\r\n                {query ? \"Nie znaleziono zadania o podanej treści\" : \"Brak zadań\"}\r\n            </TasksInfo>\r\n        )\r\n    )\r\n};\r\n\r\nexport default TasksList;\r\n","export const useTasks = () => {\r\n    const smoothCrossOutTask = (task) => {\r\n        const lengthTaskContent = task.content.length;\r\n        const result = `${((lengthTaskContent / 10) * 0.1).toFixed(1)}s`;\r\n        return result;\r\n    };\r\n\r\n    return {\r\n        smoothCrossOutTask\r\n    }\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport Section from \"../../components/Section\";\r\nimport Content from \"../../components/Content\";\r\nimport Form from \"./Form\";\r\nimport Search from \"./Search\";\r\nimport Buttons from \"./Buttons\";\r\nimport TasksList from \"./TasksList\";\r\nimport { Box, Button } from \"./styled\";\r\nimport { fetchExampleTasks } from \"./tasksSlice\";\r\n\r\nconst Tasks = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Section>\r\n            <Content\r\n                isVertical\r\n                title=\"Dodaj nowe zadanie\"\r\n                extraContentTop={\r\n                    <Box>\r\n                        <Button onClick={() => dispatch(fetchExampleTasks())}>\r\n                            Pobierz przykładowe zadania\r\n                        </Button>\r\n                    </Box>\r\n                }\r\n                extraContentBottom={\r\n                    <Form />\r\n                }\r\n            />\r\n            <Content\r\n                title=\"Wyszukiwarka\"\r\n                extraContentBottom={\r\n                    <Search />\r\n                }\r\n            />\r\n            <Content\r\n                isVertical\r\n                title=\"Lista zadań\"\r\n                extraContentTop={\r\n                    <Buttons />\r\n                }\r\n                extraContentBottom={\r\n                    <TasksList />\r\n                }\r\n            />\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default Tasks;\r\n","import Header from \"../components/Header\";\r\nimport ThemeToggle from \"../features/themeToggle/ThemeToggle\";\r\nimport TasksFeature from \"../features/tasks/Tasks\";\r\n\r\nconst Tasks = () => (\r\n    <>\r\n        <Header\r\n            title=\"Lista zadań\"\r\n            extraElement={\r\n                <ThemeToggle />\r\n            }\r\n        />\r\n        <main>\r\n            <TasksFeature />\r\n        </main>\r\n    </>\r\n);\r\n\r\nexport default Tasks;\r\n"],"names":["Block","styled","theme","contentBlock","background","border","borderRadius","transitionDuration","TopBox","vertical","css","HeaderTwo","h2","color","BottomBox","isLayout","isVertical","title","extraContentTop","extraContentBottom","layout","StyledHeader","HeaderOne","h1","extraElement","StyledSection","children","StyledThemeToggle","themeToggle","background1","background2","currentTheme","useTheme","toggleTheme","type","onClick","FormArea","FormInput","formInput","FormButton","filledButton","hoverBackground","hoverBorder","activeBackground","Box","Button","unfilledButton","cursorDefault","hoverColor","disabledColor","HiddenFormLabel","useState","taskContent","setTaskContent","focusElement","useRef","current","focus","useFocusElement","inputFocus","inputFocusEvent","tasks","useSelector","selectTasks","dispatch","useDispatch","onSubmit","e","preventDefault","trimedTaskContent","trim","length","isTaskEmpty","some","content","alert","existsTask","addTask","id","nanoid","done","htmlFor","placeholder","autoFocus","value","onChange","target","ref","useQueryParameter","key","location","useLocation","URLSearchParams","search","get","SearchEngine","query","replaceQueryParameter","navigate","useNavigate","inputValue","searchParams","delete","set","pathname","toString","useReplaceQueryParameter","useEffect","useEmptySearchParams","selectTasksState","hideDone","toggleHideDone","disabled","every","completeAllTasks","TasksArea","TasksItem","ButtonIcon","actionButtonIcon","ActionButton","actionButton1","remove","actionButton2","TasksParagraph","TasksContent","transitionTime","TasksLink","Link","ReactTooltipStyled","ReactTooltip","TasksInfo","body","smoothCrossOutTask","task","lengthTaskContent","toFixed","state","selectTasksByQuery","selectHideDone","map","toggleDoneTask","className","textColor","tooltip","backgroundColor","arrowColor","place","effect","delayShow","delayHide","to","removeTask","Section","Content","fetchExampleTasks","Header","ThemeToggle"],"sourceRoot":""}